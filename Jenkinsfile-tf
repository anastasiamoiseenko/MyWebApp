pipeline {
  agent { label 'ubuntu' }
  environment {
    TF_IN_AUTOMATION = 'true'
    AWS_SHARED_CREDENTIALS_FILE='/root/.aws/credentials'
    }
  parameters {
    string description: 'Docker Image version', name: 'IMAGE_VERSION'
  }

  stages {
      stage('Git Checkout') {
            steps {
                git branch: 'main', credentialsId: 'github-ssh', url: 'git@github.com:anastasiamoiseenko/MyWebApp.git'
            }
        }
    stage('Init TF') {
      steps {
        sh '''
          terraform init
        '''
      }
    }

    stage('Plan TF') {
      steps {
        sh '''
          terraform plan
        '''
      }
    }

    stage('Validate TF') {
      input {
        message "Do you want to apply this Plan?"
        ok "Apply Plan"
      }
      steps {
        echo 'Plan Accepted'
      }
    }

    stage('Apply TF') {
      steps {
        sh '''
          terraform apply --auto-approve
        '''
      }
    }

    stage('Print Inventory') {
      steps {
        sh '''
          echo $(terraform output -json webapp-server_public_ip) | awk -F'"' '{print $2}' > aws_hosts
          cat aws_hosts
          mv aws_hosts /home/ubuntu/jenkins/workspace/Ansible_Deploy/
        '''
      }
    }

    stage('Wait EC2') {
      steps {
        sh '''
          aws ec2 wait instance-status-ok --region eu-central-1 --instance-ids `$(terraform output -json webapp-server) | awk -F'"' '{print $2}'`
        '''
      }
    }
    stage('Start Ansible_Deploy pipeline') {
        steps {
            build job: 'Ansible_Deploy', propagate: false, wait: false, parameters: [
                string(name: 'IMAGE_VERSION', value: "${IMAGE_VERSION}")]
        }
    }    
  }
}