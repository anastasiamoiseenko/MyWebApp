pipeline {
    agent { label 'ubuntu' }
    parameters {
        string description: 'Docker Image version', name: 'IMAGE_VERSION'
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', credentialsId: 'github-ssh', url: 'git@github.com:anastasiamoiseenko/MyWebApp.git'
            }
        }
        stage ('Copy Artifacts') {
            steps {
                s3CopyArtifact buildSelector: lastSuccessful(), excludeFilter: '', filter: 'WebApp.war', flatten: false, optional: false, projectName: 'Mvn_Build', target: ''
            }
        }
        stage('Build Docker Image') {
            steps {
                sh "docker build -t anastasiamoiseenko/webapp:$IMAGE_VERSION ."
            }
        }
        stage('Push Docker Image') {
            steps {
                withDockerRegistry(credentialsId: 'dockerhub-cred', url: 'https://index.docker.io/v1/') {
                    sh """
                        docker push anastasiamoiseenko/webapp:$IMAGE_VERSION
                    """
                }
            }
        }
        stage('Delete Docker Image Locally') {
            steps {
                sh "docker rmi anastasiamoiseenko/webapp:$IMAGE_VERSION"
            }
        }
        stage('Start Terraform_Infrastructure pipeline') {
            steps {
                build job: 'Terraform_Infrastructure', propagate: false, wait: false, parameters: [
                    string(name: 'IMAGE_VERSION', value: "${IMAGE_VERSION}")]
            }
        } 
    }
}